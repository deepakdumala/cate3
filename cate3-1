def remove_duplicates(nums):
    if not nums:
        return []
    
    # Initialize the index for the new unique array
    unique_index = 0
    
    # Iterate through the array starting from the second element
    for i in range(1, len(nums)):
        # If the current element is different from the last unique element,
        # append it to the new unique array and update the last unique element
        if nums[i] != nums[unique_index]:
            unique_index += 1
            nums[unique_index] = nums[i]
    
    # Return the new unique array
    return nums[:unique_index + 1]

# Example usage
sorted_array = [1, 1, 2, 2, 3, 4, 4, 5, 5, 5]
unique_array = remove_duplicates(sorted_array)
print("Array after removing duplicates:", unique_array)
